@using NewsBlazor.Models
@using NewsBlazor.Services;
@inject NewsService newsService
@inject CategoryService categoryService
@inject NavigationManager NavigationManager


@page "/viewnews/{id}"

<div class="container">

    @if (news == null)
    {
        <div class="container text-center pb-4">
            <p>No se encontro la noticia.</p>
            <a class="btn btn-primary" href="/#">Volver al inicio</a>


        </div>
    }
    else
    {
        <div class="container  pb-4">
            <h1 class="text-center">@news.title</h1>
            <hr />
            <h5 class="">@news.description</h5>
            <p class="">
                <small class="text-muted">
                    <a class="text-muted" href="/secciones/@category.name">@category.name</a>, @news.publicationDate.ToShortDateString()
                </small>
            </p>
            <hr />
            <img class="img-fluid" src="@news.imageUrl" />
            <hr />
            <p>@news.content</p>
        </div>
    }
</div>


@code {
    [Parameter]
    public string Id { get; set; }

    private News news;
    private Category category;

    protected override async Task OnInitializedAsync()
    {
        var id = NavigationManager.Uri.Split('/').Last();
        news = await newsService.GetNewsById(id);
        //if (!string.IsNullOrEmpty(Id))
        //{
        //    news = await newsService.GetNewsById(Id);
        //}

        category = await categoryService.GetById(news.categoryId);
    }
}