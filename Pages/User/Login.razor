@page "/login"
@using Microsoft.AspNetCore.Components
@using NewsBlazor.Auth;
@using NewsBlazor.Services;
@using NewsBlazor.Models;
@using System.Text.Json;

@inject NavigationManager NavigationManager;

<div class="container mb-5">
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger" role="alert">
            @errorMessage
        </div>       
    }
    <div>
        <label class="form-label">E-mail</label>
        <input class="form-control" type="email" @bind="user.email" />
    </div>
    <div>
        <label class="form-label">Password</label>
        <input class="form-control" type="password"  @bind="user.password"/>
    </div>
    <br />
    <div>
        <button @onclick="Log" class="btn btn-success">Ingresar</button>
        <a class="btn btn-secondary" href="/">Volver</a>
    </div>
</div>



@code {
    private string errorMessage = string.Empty;
    private UserCredentials user = new UserCredentials();
    [Inject]
    private IJSRuntime jSRuntime { get; set; }
    [Inject]
    private HttpClient httpClient { get; set; }

    private async Task Log()
    {
        var loginModel = new { email = user.email, password = user.password };

        var apiUrl = "https://localhost:7081/api/account/login";
        var result = await httpClient.PostAsJsonAsync(apiUrl, loginModel);
        if (result.IsSuccessStatusCode)
        {
            // Lee el contenido de la respuesta como una cadena JSON
            var responseContent = await result.Content.ReadAsStringAsync();

            // Deserializa la cadena JSON en un objeto AuthorizationResponse
            var authorizationResponse = JsonSerializer.Deserialize<AuthorizationResponse>(responseContent);
            //await jWTAuthenticationProvider.Login(authorizationResponse.token);

            errorMessage = string.Empty;
            NavigationManager.NavigateTo("/admin");
        }
        else
        {
            errorMessage = "Completar los datos correctamente.";
            NavigationManager.NavigateTo(NavigationManager.Uri);
        }
        //HttpResponseMessage response = await httpClient.PostAsJsonAsync("https://localhost:7081/api/account/login", user);
        //if (response.IsSuccessStatusCode)
        //{
        //    var authResponse = await response.Content.ReadFromJsonAsync<AuthorizationResponse>();
        //    var accessToken = authResponse.token;
        //    errorMessage = string.Empty;
        //    // Almacenar el token en una cookie.
        //    //await jSRuntime.InvokeVoidAsync("setCookie", "AccessToken", accessToken);
        //    NavigationManager.NavigateTo("/admin");
        //}
        //else
        //{
        //    errorMessage = "Completar los datos correctamente.";
        //    NavigationManager.NavigateTo(NavigationManager.Uri);
        //}
    }
}