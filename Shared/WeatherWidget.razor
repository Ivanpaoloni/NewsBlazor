@using System.Net.Http;
@using NewsBlazor.Models;
@using NewsBlazor.Services;
@using Microsoft.JSInterop;

@inject HttpClient httpClient
@inject WeatherService WeatherService
@inject IJSRuntime JSRuntime
@inject NavigationManager NavigationManager


<div class="card mb-4">
    <div class="card-header">Clima</div>
        <div class="card-body">
            @if(weatherData != null)
            {
            <h5><i class="bi bi-pin-map-fill"></i> @weatherData.Name. <i class="bi bi-thermometer"></i>@weatherData.Main.Temp °C. <i class="bi bi-droplet-fill"></i>@weatherData.Main.Humidity%.</h5>
            }

    </div>
</div>

@code {

    private WeatherData weatherData;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            var location = await JSRuntime.InvokeAsync<Location>("getCurrentLocation");
            latitude = location.Latitude;
            longitude = location.Longitude;
            await GetWeatherData();
            StateHasChanged();
        }
    }

    // funcion para obtener el clima y la localizacion.
    private async Task GetWeatherData()
    {

        //var latitude = -31.756278;
        //var longitude = -60.475150;
        var apiKey = "cb4b62d3cd1ba79ac4bb8f75805eaa14";

        weatherData = await WeatherService.GetWeatherDataByCoordinatesAsync(latitude, longitude, apiKey);

    }
    private double latitude;
    private double longitude;

    private class Location
    {
        public double Latitude { get; set; }
        public double Longitude { get; set; }
    }
}

